{"ast":null,"code":"import _classCallCheck from \"/home/marcel/code/Code/motivatieBrief/spa/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/marcel/code/Code/motivatieBrief/spa/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(http) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.jwtHelper = new JwtHelperService();\n      this.Hospital = new BehaviorSubject('0');\n      this.currentHospital = this.Hospital.asObservable();\n      this.SerialNumber = new BehaviorSubject('');\n      this.currentSerial = this.SerialNumber.asObservable();\n      this.UserRole = new BehaviorSubject('');\n      this.currentRole = this.UserRole.asObservable();\n    }\n\n    _createClass(AuthService, [{\n      key: \"changeCurrentHospital\",\n      value: function changeCurrentHospital(sh) {\n        this.Hospital.next(sh);\n      }\n    }, {\n      key: \"changeCurrentSerial\",\n      value: function changeCurrentSerial(sh) {\n        this.SerialNumber.next(sh);\n      }\n    }, {\n      key: \"changeCurrentRole\",\n      value: function changeCurrentRole(sh) {\n        this.UserRole.next(sh);\n      }\n    }, {\n      key: \"login\",\n      value: function login(model) {\n        var _this = this;\n\n        return this.http.post(this.baseUrl + 'auth/login', model).pipe(map(function (response) {\n          var user = response;\n\n          if (user) {\n            localStorage.setItem('token', user.token);\n            _this.decodedToken = _this.jwtHelper.decodeToken(user.token);\n            console.log(_this.decodedToken);\n          }\n        }));\n      }\n    }, {\n      key: \"register\",\n      value: function register(model) {\n        return this.http.post(this.baseUrl + 'auth/register', model);\n      }\n    }, {\n      key: \"updatePassword\",\n      value: function updatePassword(model) {\n        return this.http.put(this.baseUrl + 'auth/changePassword', model);\n      }\n    }, {\n      key: \"loggedIn\",\n      value: function loggedIn() {\n        var token = localStorage.getItem('token');\n        return !this.jwtHelper.isTokenExpired(token);\n      }\n    }, {\n      key: \"logOut\",\n      value: function logOut() {\n        localStorage.setItem('token', null);\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}