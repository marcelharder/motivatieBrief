{"ast":null,"code":"import _classCallCheck from \"/home/marcel/code/Code/motivatieBrief/spa/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/marcel/code/Code/motivatieBrief/spa/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var DropdownService = /*#__PURE__*/(function () {\n  var DropdownService = /*#__PURE__*/function () {\n    function DropdownService(http) {\n      _classCallCheck(this, DropdownService);\n\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n    }\n\n    _createClass(DropdownService, [{\n      key: \"getEmployees\",\n      value: function getEmployees(hospital_id, job_id, activeState, liscense_to_kill) {\n        var params = new HttpParams();\n        params = params.append('hospital_id', hospital_id);\n        params = params.append('job_id', job_id);\n        params = params.append('activeState', activeState);\n        params = params.append('liscense_to_kill', liscense_to_kill);\n        return this.http.get(this.baseUrl + 'dropEmployee', {\n          params: params\n        });\n      }\n    }, {\n      key: \"isProcedureComplete\",\n      value: function isProcedureComplete(patientId) {\n        return this.http.get(this.baseUrl + 'isComplete/' + patientId.toString(), {\n          responseType: 'text'\n        });\n      } //#region <!-- cpb -->\n\n    }, {\n      key: \"getVenousCanulation\",\n      value: function getVenousCanulation() {\n        return this.http.get(this.baseUrl + 'ven_canulation_options');\n      }\n    }, {\n      key: \"getArterialCanulation\",\n      value: function getArterialCanulation() {\n        return this.http.get(this.baseUrl + 'art_canulation_options');\n      }\n    }, {\n      key: \"getOcclusionMethod\",\n      value: function getOcclusionMethod() {\n        return this.http.get(this.baseUrl + 'occl_method');\n      }\n    }, {\n      key: \"getMyoTech\",\n      value: function getMyoTech() {\n        return this.http.get(this.baseUrl + 'myotech');\n      }\n    }, {\n      key: \"getMPT\",\n      value: function getMPT() {\n        return this.http.get(this.baseUrl + 'mpt');\n      }\n    }, {\n      key: \"getCardioplegTiming\",\n      value: function getCardioplegTiming() {\n        return this.http.get(this.baseUrl + 'cardioplegtiming');\n      }\n    }, {\n      key: \"getCardioplegTemp\",\n      value: function getCardioplegTemp() {\n        return this.http.get(this.baseUrl + 'cardioplegtemp');\n      }\n    }, {\n      key: \"getDelivery\",\n      value: function getDelivery() {\n        return this.http.get(this.baseUrl + 'cardioplegdelivery');\n      }\n    }, {\n      key: \"getIabpTiming\",\n      value: function getIabpTiming() {\n        return this.http.get(this.baseUrl + 'iabp_timing');\n      }\n    }, {\n      key: \"getIabpIndication\",\n      value: function getIabpIndication() {\n        return this.http.get(this.baseUrl + 'iabp_ind');\n      }\n    }, {\n      key: \"getTypeCardioplegia\",\n      value: function getTypeCardioplegia() {\n        return this.http.get(this.baseUrl + 'typeCardiopleg');\n      } //#endregion\n      //#region <!--  -->\n\n    }, {\n      key: \"getGenderOptions\",\n      value: function getGenderOptions() {\n        return this.http.get(this.baseUrl + 'gender_options');\n      }\n    }, {\n      key: \"getWeightOptions\",\n      value: function getWeightOptions() {\n        return this.http.get(this.baseUrl + 'weight_options');\n      }\n    }, {\n      key: \"getHeightOptions\",\n      value: function getHeightOptions() {\n        return this.http.get(this.baseUrl + 'height_options');\n      }\n    }, {\n      key: \"getAgeOptions\",\n      value: function getAgeOptions() {\n        return this.http.get(this.baseUrl + 'age_options');\n      }\n    }, {\n      key: \"getCreatOptions\",\n      value: function getCreatOptions() {\n        return this.http.get(this.baseUrl + 'creat_options');\n      }\n    }, {\n      key: \"getTimingOptions\",\n      value: function getTimingOptions() {\n        return this.http.get(this.baseUrl + 'timing_options');\n      }\n    }, {\n      key: \"getYNOptions\",\n      value: function getYNOptions() {\n        return this.http.get(this.baseUrl + 'dropdownlist/68');\n      }\n    }, {\n      key: \"getHours\",\n      value: function getHours() {\n        return this.http.get(this.baseUrl + 'dropHours');\n      }\n    }, {\n      key: \"getMins\",\n      value: function getMins() {\n        return this.http.get(this.baseUrl + 'dropMins');\n      }\n    }, {\n      key: \"getUrgentOptions\",\n      value: function getUrgentOptions() {\n        return this.http.get(this.baseUrl + 'urgent_options');\n      }\n    }, {\n      key: \"getEmergentOptions\",\n      value: function getEmergentOptions() {\n        return this.http.get(this.baseUrl + 'emergent_options');\n      }\n    }, {\n      key: \"getInotropeOptions\",\n      value: function getInotropeOptions() {\n        return this.http.get(this.baseUrl + 'inotrope_options');\n      }\n    }, {\n      key: \"getPacemakerOptions\",\n      value: function getPacemakerOptions() {\n        return this.http.get(this.baseUrl + 'pacemaker_options');\n      }\n    }, {\n      key: \"getPericardOptions\",\n      value: function getPericardOptions() {\n        return this.http.get(this.baseUrl + 'pericard_options');\n      }\n    }, {\n      key: \"getPleuraOptions\",\n      value: function getPleuraOptions() {\n        return this.http.get(this.baseUrl + 'pleura_options');\n      } //#endregion\n      //#region <!-- cabg -->\n\n    }, {\n      key: \"getCabgQuality\",\n      value: function getCabgQuality() {\n        return this.http.get(this.baseUrl + 'cabg_quality');\n      }\n    }, {\n      key: \"getCabgDiameter\",\n      value: function getCabgDiameter() {\n        return this.http.get(this.baseUrl + 'cabg_diameter');\n      }\n    }, {\n      key: \"getCabgType\",\n      value: function getCabgType() {\n        return this.http.get(this.baseUrl + 'cabg_type');\n      }\n    }, {\n      key: \"getCabgLocatie\",\n      value: function getCabgLocatie() {\n        return this.http.get(this.baseUrl + 'cabg_locatie');\n      }\n    }, {\n      key: \"getCabgProximal\",\n      value: function getCabgProximal() {\n        return this.http.get(this.baseUrl + 'cabg_proximal');\n      }\n    }, {\n      key: \"getCabgConduit\",\n      value: function getCabgConduit() {\n        return this.http.get(this.baseUrl + 'cabg_conduit');\n      }\n    }, {\n      key: \"getCabgProcedure\",\n      value: function getCabgProcedure() {\n        return this.http.get(this.baseUrl + 'cabg_procedure');\n      }\n    }, {\n      key: \"getCabgAngle\",\n      value: function getCabgAngle() {\n        return this.http.get(this.baseUrl + 'cabg_angle');\n      }\n    }, {\n      key: \"getCabgDroplist1\",\n      value: function getCabgDroplist1() {\n        return this.http.get(this.baseUrl + 'cabg_dropList1');\n      }\n    }, {\n      key: \"getCabgRadial\",\n      value: function getCabgRadial() {\n        return this.http.get(this.baseUrl + 'cabg_radial');\n      }\n    }, {\n      key: \"getCabgLeg\",\n      value: function getCabgLeg() {\n        return this.http.get(this.baseUrl + 'cabg_leg');\n      } //#endregion\n\n    }, {\n      key: \"getCategory_1_Options\",\n      value: function getCategory_1_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 1);\n      }\n    }, {\n      key: \"getCategory_2_Options\",\n      value: function getCategory_2_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 2);\n      }\n    }, {\n      key: \"getCategory_3_Options\",\n      value: function getCategory_3_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 3);\n      }\n    }, {\n      key: \"getCategory_4_Options\",\n      value: function getCategory_4_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 4);\n      }\n    }, {\n      key: \"getCategory_5_Options\",\n      value: function getCategory_5_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 5);\n      }\n    }, {\n      key: \"getCategory_6_Options\",\n      value: function getCategory_6_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 6);\n      }\n    }, {\n      key: \"getCategory_7_Options\",\n      value: function getCategory_7_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 7);\n      }\n    }, {\n      key: \"getCategory_8_Options\",\n      value: function getCategory_8_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 8);\n      }\n    }, {\n      key: \"getCategory_9_Options\",\n      value: function getCategory_9_Options() {\n        return this.http.get(this.baseUrl + 'addProcedureCategory/' + 9);\n      }\n    }, {\n      key: \"getEuroScore_Options\",\n      value: function getEuroScore_Options(patientId) {\n        return this.http.get(this.baseUrl + 'euroScoreOptions/' + patientId);\n      }\n    }, {\n      key: \"getHospitals\",\n      value: function getHospitals(userId) {\n        return this.http.get(this.baseUrl + 'hospitalOptions/' + userId);\n      } //#region <!-- cpb -->\n\n    }, {\n      key: \"getMyocardialPreservationTechnique\",\n      value: function getMyocardialPreservationTechnique() {\n        return this.http.get(this.baseUrl + 'myocardialPreservationTechnique');\n      }\n    }, {\n      key: \"getAC\",\n      value: function getAC() {\n        return this.http.get(this.baseUrl + 'art_choice');\n      }\n    }, {\n      key: \"getVC\",\n      value: function getVC() {\n        return this.http.get(this.baseUrl + 'ven_choice');\n      }\n    }, {\n      key: \"getIABPI\",\n      value: function getIABPI() {\n        return this.http.get(this.baseUrl + 'iabp_ind');\n      }\n    }, {\n      key: \"getIABPT\",\n      value: function getIABPT() {\n        return this.http.get(this.baseUrl + 'iabp_timing');\n      }\n    }, {\n      key: \"getNCCP\",\n      value: function getNCCP() {\n        return this.http.get(this.baseUrl + 'cpb_nccp');\n      }\n    }, {\n      key: \"getAOX\",\n      value: function getAOX() {\n        return this.http.get(this.baseUrl + 'cpb_aox');\n      }\n    }, {\n      key: \"getCPB_TIMING\",\n      value: function getCPB_TIMING() {\n        return this.http.get(this.baseUrl + 'cpb_timing');\n      }\n    }, {\n      key: \"getCPB_TEMP\",\n      value: function getCPB_TEMP() {\n        return this.http.get(this.baseUrl + 'cpb_temp');\n      }\n    }, {\n      key: \"getCPB_delivery\",\n      value: function getCPB_delivery(i) {\n        return this.http.get(this.baseUrl + 'cpb_delivery');\n      }\n    }, {\n      key: \"getIABP_WHEN\",\n      value: function getIABP_WHEN() {\n        return this.http.get(this.baseUrl + 'iabp_when');\n      }\n    }, {\n      key: \"getIABP_WHY\",\n      value: function getIABP_WHY() {\n        return this.http.get(this.baseUrl + 'iabp_why');\n      } //#endregion\n      //#region <!-- valve -->\n\n    }, {\n      key: \"getAorticProcedure\",\n      value: function getAorticProcedure() {\n        return this.http.get(this.baseUrl + 'aorticProcedure');\n      }\n    }, {\n      key: \"getMitralProcedure\",\n      value: function getMitralProcedure() {\n        return this.http.get(this.baseUrl + 'mitralProcedure');\n      }\n    }, {\n      key: \"getPulmonaryProcedure\",\n      value: function getPulmonaryProcedure() {\n        return this.http.get(this.baseUrl + 'pulmonaryProcedure');\n      }\n    }, {\n      key: \"getTricuspidProcedure\",\n      value: function getTricuspidProcedure() {\n        return this.http.get(this.baseUrl + 'tricuspidProcedure');\n      }\n    }, {\n      key: \"getAetiology\",\n      value: function getAetiology() {\n        return this.http.get(this.baseUrl + 'aetiology');\n      }\n    }, {\n      key: \"getMitralValveRepair\",\n      value: function getMitralValveRepair() {\n        return this.http.get(this.baseUrl + 'mitralValveRepair');\n      }\n    }, {\n      key: \"getTricuspidValveRepair\",\n      value: function getTricuspidValveRepair() {\n        return this.http.get(this.baseUrl + 'tricuspidValveRepair');\n      }\n    }, {\n      key: \"getMitralRingType\",\n      value: function getMitralRingType() {\n        return this.http.get(this.baseUrl + 'mitralRingType');\n      }\n    }, {\n      key: \"getTricuspidRingType\",\n      value: function getTricuspidRingType() {\n        return this.http.get(this.baseUrl + 'tricuspidRingType');\n      }\n    }, {\n      key: \"getMitralRingsInHospital\",\n      value: function getMitralRingsInHospital() {\n        return this.http.get(this.baseUrl + 'mitralRingTypeInHospital');\n      }\n    }, {\n      key: \"getTricuspidRingsInHospital\",\n      value: function getTricuspidRingsInHospital() {\n        return this.http.get(this.baseUrl + 'tricuspidRingTypeInHospital');\n      }\n    }, {\n      key: \"getValveType\",\n      value: function getValveType() {\n        return this.http.get(this.baseUrl + 'valveType');\n      }\n    }, {\n      key: \"getImplantPosition\",\n      value: function getImplantPosition() {\n        return this.http.get(this.baseUrl + 'implantPosition');\n      } //#endregion\n\n    }, {\n      key: \"getWoIntOptions\",\n      value: function getWoIntOptions() {\n        return this.http.get(this.baseUrl + 'eu_weight_intervention');\n      }\n    }, {\n      key: \"getPH\",\n      value: function getPH() {\n        return this.http.get(this.baseUrl + 'eu_pulmonary_hypertension');\n      }\n    }, {\n      key: \"getNYHA\",\n      value: function getNYHA() {\n        return this.http.get(this.baseUrl + 'eu_NYHA');\n      }\n    }, {\n      key: \"getLVFunction\",\n      value: function getLVFunction() {\n        return this.http.get(this.baseUrl + 'eu_lv_function');\n      } //#region <!-- postop -->\n\n    }, {\n      key: \"getAutoBloodTiming\",\n      value: function getAutoBloodTiming() {\n        return this.http.get(this.baseUrl + 'AutoBloodTiming');\n      }\n    }, {\n      key: \"getComp_options_01\",\n      value: function getComp_options_01() {\n        return this.http.get(this.baseUrl + 'complicationOptions01');\n      }\n    }, {\n      key: \"getComp_options_02\",\n      value: function getComp_options_02() {\n        return this.http.get(this.baseUrl + 'complicationOptions02');\n      }\n    }, {\n      key: \"getComp_options_03\",\n      value: function getComp_options_03() {\n        return this.http.get(this.baseUrl + 'complicationOptions03');\n      }\n    }, {\n      key: \"getComp_options_04\",\n      value: function getComp_options_04() {\n        return this.http.get(this.baseUrl + 'complicationOptions04');\n      }\n    }, {\n      key: \"getComp_options_05\",\n      value: function getComp_options_05() {\n        return this.http.get(this.baseUrl + 'complicationOptions05');\n      }\n    }, {\n      key: \"getComp_options_06\",\n      value: function getComp_options_06() {\n        return this.http.get(this.baseUrl + 'complicationOptions06');\n      }\n    }, {\n      key: \"getComp_options_07\",\n      value: function getComp_options_07() {\n        return this.http.get(this.baseUrl + 'complicationOptions07');\n      }\n    }, {\n      key: \"getComp_options_08\",\n      value: function getComp_options_08() {\n        return this.http.get(this.baseUrl + 'complicationOptions08');\n      }\n    }, {\n      key: \"getComp_options_09\",\n      value: function getComp_options_09() {\n        return this.http.get(this.baseUrl + 'complicationOptions09');\n      } //#endregion\n      //#region <!-- discharge -->\n\n    }, {\n      key: \"getActivitiesDischarge\",\n      value: function getActivitiesDischarge() {\n        return this.http.get(this.baseUrl + 'discharge_activities');\n      }\n    }, {\n      key: \"getDischargeDiagnosis\",\n      value: function getDischargeDiagnosis() {\n        return this.http.get(this.baseUrl + 'discharge_diagnosis');\n      }\n    }, {\n      key: \"getDischargeDirection\",\n      value: function getDischargeDirection() {\n        return this.http.get(this.baseUrl + 'discharge_direction');\n      }\n    }, {\n      key: \"getMortalityLocation\",\n      value: function getMortalityLocation() {\n        return this.http.get(this.baseUrl + 'dead_location');\n      }\n    }, {\n      key: \"getMortalityCause\",\n      value: function getMortalityCause() {\n        return this.http.get(this.baseUrl + 'dead_cause');\n      }\n    }, {\n      key: \"getMortality\",\n      value: function getMortality() {\n        return this.http.get(this.baseUrl + 'dead');\n      } //#endregion\n      //#region <!-- user edit -->\n\n    }, {\n      key: \"getAllCountries\",\n      value: function getAllCountries() {\n        return this.http.get(this.baseUrl + 'countriesDrops');\n      }\n    }, {\n      key: \"getAllCities\",\n      value: function getAllCities() {\n        return this.http.get(this.baseUrl + 'citiesDrops');\n      }\n    }, {\n      key: \"getRoles\",\n      value: function getRoles() {\n        return this.http.get(this.baseUrl + 'roles');\n      }\n    }, {\n      key: \"getCareerTopics\",\n      value: function getCareerTopics() {\n        return this.http.get(this.baseUrl + 'career');\n      } // tslint:disable-next-line: max-line-length\n\n    }, {\n      key: \"getAllHospitalsPerCountry\",\n      value: function getAllHospitalsPerCountry(countryId) {\n        return this.http.get(this.baseUrl + 'allHospitalOptionsPerCountry/' + countryId);\n      } //#endregion\n      //#region <!-- aneurysm -->\n\n    }, {\n      key: \"getAneurysmType\",\n      value: function getAneurysmType() {\n        return this.http.get(this.baseUrl + 'aneurysmType');\n      }\n    }, {\n      key: \"getDissectionOnset\",\n      value: function getDissectionOnset() {\n        return this.http.get(this.baseUrl + 'dissectionOnset');\n      }\n    }, {\n      key: \"getDissectionType\",\n      value: function getDissectionType() {\n        return this.http.get(this.baseUrl + 'dissectionType');\n      }\n    }, {\n      key: \"getPathology\",\n      value: function getPathology() {\n        return this.http.get(this.baseUrl + 'pathology');\n      }\n    }, {\n      key: \"getOpIndication\",\n      value: function getOpIndication() {\n        return this.http.get(this.baseUrl + 'opIndication');\n      }\n    }, {\n      key: \"getOpTechnique\",\n      value: function getOpTechnique() {\n        return this.http.get(this.baseUrl + 'optechnique');\n      }\n    }, {\n      key: \"getRangeReplacement\",\n      value: function getRangeReplacement() {\n        return this.http.get(this.baseUrl + 'rangeReplacement');\n      } //#endregion\n      //#region <!-- ltx -->\n\n    }, {\n      key: \"getLtxIndication\",\n      value: function getLtxIndication() {\n        return this.http.get(this.baseUrl + 'dropLtxIndication');\n      }\n    }, {\n      key: \"getLtxType\",\n      value: function getLtxType() {\n        return this.http.get(this.baseUrl + 'dropLtxType');\n      } //endregion\n\n    }, {\n      key: \"getConversionDetails\",\n      value: function getConversionDetails() {\n        return this.http.get(this.baseUrl + 'conversionDetails');\n      }\n    }, {\n      key: \"getStrategy\",\n      value: function getStrategy() {\n        return this.http.get(this.baseUrl + 'strategy');\n      }\n    }, {\n      key: \"getPrimary_incision\",\n      value: function getPrimary_incision() {\n        return this.http.get(this.baseUrl + 'primaryIncision');\n      }\n    }, {\n      key: \"getFollow1\",\n      value: function getFollow1() {\n        return this.http.get(this.baseUrl + 'follow1');\n      }\n    }, {\n      key: \"getFollow2\",\n      value: function getFollow2() {\n        return this.http.get(this.baseUrl + 'follow2');\n      }\n    }, {\n      key: \"getLimaHarvest\",\n      value: function getLimaHarvest() {\n        return this.http.get(this.baseUrl + 'limaHarvest');\n      }\n    }, {\n      key: \"getStabilization\",\n      value: function getStabilization() {\n        return this.http.get(this.baseUrl + 'stabilization');\n      }\n    }, {\n      key: \"getSuture_technique\",\n      value: function getSuture_technique() {\n        return this.http.get(this.baseUrl + 'sutureTechnique');\n      }\n    }, {\n      key: \"getFollow3\",\n      value: function getFollow3() {\n        return this.http.get(this.baseUrl + 'follow3');\n      }\n    }, {\n      key: \"getAllHospitals\",\n      value: function getAllHospitals() {\n        return this.http.get(this.baseUrl + 'allHospitals');\n      }\n    }]);\n\n    return DropdownService;\n  }();\n\n  DropdownService.ɵfac = function DropdownService_Factory(t) {\n    return new (t || DropdownService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DropdownService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DropdownService,\n    factory: DropdownService.ɵfac,\n    providedIn: 'root'\n  });\n  return DropdownService;\n})();","map":null,"metadata":{},"sourceType":"module"}